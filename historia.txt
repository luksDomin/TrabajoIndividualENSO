-------------------------------------------------------------------------------
		Comandos GIT utilizados en en la practica
-------------------------------------------------------------------------------

/***Aclaraciones: 1. Estos numeros no van acordes con los del enunciado que aparece en la practica, son los pasos 
		     que seguí para poder completarla.
		  2. El documento de control de cambios aparece como v1 pero, realmente las versiones son las que 
		     se almacenan en git.
***/

1. Comenzamos clonando el repositorio: git clone
2. Una vez situados en el repositorio lo inicializamos: git init
3. Añado todo el directorio a la staggin area: git add .
4. Confirmo los cambios realizados en el repositorio localy así lo actualizo:
   git commit -m "Actualizar repositorio local con cambios realizados"
5. Para crear una etiqueta anotada con un mensaje descriptivo, utilizo: 
   git tag -a R1 -m "Versión R1: Estado inicial del repositorio"
6. No habia añadido las plantillas en blanco, por tanto, tras añadirlas
   he realizado un git add . y un git commit -m "Actualizar repositorio local ya que no se habian añadido las 
   platillas vacias iniciales"
7. He creado la etiqueta R1.1 para especificar que seguiré desde este punto: 
   git tag -a R1.1 -m "Actualización del repositorio local, no se habian añadido las plantillas"
8. Creo la rama denominada mejoras: git branch Mejoras, posteriormente me cambio a ella con git switch Mejoras
9. Mezclo la rama master con la rama "Mejoras": git merge Mejoras
10. Elimino la rama Mejoras: git branch -d Mejoras
11. Actualizo el repositorio: git add ., git commit -m "Segunda Actualizacion (V2 del documento)
12. Creo la segunda etiqueta: git tag -a R2 -m "VERSION R2"
13. Actualizamos el repositorio con la V3: git add ., git commit -m "Tercera Actualizacion 
   (V3 del documento)
14. Accedo al los hashes de los commit con git log --oneline
15. Reseteo la rama a la version anterior con git reset f1282c3 (hash del tag R2)
16. Volvemos a actualizar el repositorio tras realizar los cambios que necesitabamos:
    git add . , git commit -m "TERCERA ACTUALIZACION (V3 del documento)"
17. Ahora marcamos con la etiqueta R3: git tag -a R3 -m "VERSION R3" 
18. Hacemos el push de la rama principal git push origin main
19. Hacemos el push de las etiquetas: git push --tags
20. Hacemos git pull origin main para actualizar el repositorio
21. Finalmente tras añadir esta utlima linea comprobamos con git diff las diferencias entre este y el actual
22. Subimos todos los cambios al repositorio remoto con git add . seguido de git commit
    -m "Commit final de esta practica" y finalmente git push origin main
